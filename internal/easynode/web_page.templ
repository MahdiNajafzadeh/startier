package easynode

import "fmt"

templ Index(data []DataNode) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<script src="https://cdn.tailwindcss.com"></script>
			<title>easynode</title>
		</head>
		<body>
			<div class="min-h-screen flex flex-col bg-gray-100">
				<header class="bg-blue-500 text-white p-4 shadow">
					<h1 class="text-2xl font-bold">easynode</h1>
				</header>
				<main class="flex-grow p-4">
					<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
						for _ , node := range data {
							<div class="bg-white border shadow-lg rounded-lg p-4">
								<div class="flex flex-row justify-between items-center">
									<h2 class="text-lg font-bold text-gray-800">{ node.ID }</h2>
									<div>
										if _config.NodeID == node.ID {
											@Label("IsMe", "green", "green")
											<div class="mx-2"></div>
										}
										@Label(node.Local.IPMask, "blue", "blue")
									</div>
								</div>
								<div class="mt-4">
									<div class="bg-white border rounded-lg overflow-hidden">
										<div
											class="flex items-center justify-between p-4 cursor-pointer hover:bg-gray-100"
											onclick={ toggleContent(node.ID, "address") }
										>
											<span class="font-semibold text-md">addresses</span>
											<svg
												id={ "node-(" + node.ID + ")-address-toggle-btn" }
												xmlns="http://www.w3.org/2000/svg"
												class="w-5 h-5 text-gray-600 transition-transform transform rotate-0"
												viewBox="0 0 20 20"
												fill="currentColor"
												aria-hidden="true"
											>
												<path
													fill-rule="evenodd"
													d="M10 3a1 1 0 011 1v12a1 1 0 01-2 0V4a1 1 0 011-1z"
													clip-rule="evenodd"
												></path>
											</svg>
										</div>
										<div id={ "node-(" + node.ID + ")-address-content" } class="p-4 bg-gray-50 hidden">
											for _, a := range node.Addresses {
												@Label(a.IPMask, "blue", "blue")
												<div class="mx-2"></div>
											}
										</div>
									</div>
								</div>
								<div class="mt-4">
									<div class="bg-white border rounded-lg overflow-hidden">
										<div
											class="flex items-center justify-between p-4 cursor-pointer hover:bg-gray-100"
											onclick={ toggleContent(node.ID, "edge") }
										>
											<span class="font-semibold text-md">edges</span>
											<svg
												id={ "node-(" + node.ID + ")-edge-toggle-btn" }
												xmlns="http://www.w3.org/2000/svg"
												class="w-5 h-5 text-gray-600 transition-transform transform rotate-0"
												viewBox="0 0 20 20"
												fill="currentColor"
												aria-hidden="true"
											>
												<path
													fill-rule="evenodd"
													d="M10 3a1 1 0 011 1v12a1 1 0 01-2 0V4a1 1 0 011-1z"
													clip-rule="evenodd"
												></path>
											</svg>
										</div>
										<div id={ "node-(" + node.ID + ")-edge-content" } class="p-4 bg-gray-50 hidden">
											for _, e := range node.Edges {
												@Label(e.To, "blue", "blue")
												<div class="mx-2"></div>
											}
										</div>
									</div>
								</div>
							</div>
						}
					</div>
				</main>
				<footer class="bg-gray-800 text-white text-center p-4">
					<p>&copy; 2025 <a href="https://github.com/MahdiNajafzadeh/startier">easynode</a>. all rights reserved.</p>
				</footer>
			</div>
		</body>
	</html>
}

templ Label(text, bgColor, textColor string) {
	<span
		class={ fmt.Sprintf("inline-block bg-%s-200 text-%s-800 text-xs font-semibold px-2.5 py-0.5 rounded",
    bgColor,textColor) }
	>
		{ text }
	</span>
}

script toggleContent(id, t string) {
const content = document.getElementById(`node-(${id})-${t}-content`);
const icon = document.getElementById(`node-(${id})-${t}-toggle-btn`);
content.classList.toggle('hidden');
icon.classList.toggle('rotate-90');
}
